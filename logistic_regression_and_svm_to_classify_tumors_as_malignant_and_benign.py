# -*- coding: utf-8 -*-
"""Logistic Regression and SVM to classify Tumors as Malignant and Benign.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ia5wqtO-Iwgpvi1hRooJ6-tWrb2j9Cv8
"""

from sklearn.datasets import load_breast_cancer
from sklearn.svm import SVC
import matplotlib.pyplot as plt              
import numpy as np   
import pandas as pd    
import keras

"""**Dataset**"""

data = load_breast_cancer()
X = data.data
y = data.target
y = np.expand_dims(y, 1)
ds_arr = np.concatenate((X, y), axis=1)

labels = list(data.feature_names) + ['Target']
ds = pd.DataFrame(ds_arr, columns=labels)

ds = ds.sample(frac=1., random_state=0).reset_index(drop=True)
ds.head()

ds_arr = np.array(ds)
index = 500
Xtrain = ds_arr[:index, :-1]
ytrain = ds_arr[:index, -1:]
Xtest = ds_arr[index:, :-1]
ytest = ds_arr[index:, -1:]
print(Xtrain.shape, ytrain.shape, Xtest.shape, ytest.shape)

"""**Logistic Regression**"""

model = keras.Sequential([keras.layers.Dense(1, activation='sigmoid', input_shape=(30,))])
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

hist = model.fit(Xtrain, ytrain, batch_size=32, epochs=50, validation_data=(Xtest, ytest))


losses = hist.history['loss']
plt.figure()
plt.plot(range(len(losses)), losses, 'r--x')
plt.ylabel('Losses')
plt.xlabel('Epochs')
plt.show()

"""**Output**"""

outputs = model.predict(Xtest)
for i in range(len(Xtest)):
  print(f'No {i+1}\tTarget: {ytest[i, 0]}\tPrediction: {outputs[i, 0]:4.2f}')

"""**Support Vector Machines**"""

svm = SVC(kernel='rbf', C=10000).fit(Xtrain, ytrain)

tags = ['M', 'B']
outputs = svm.predict(Xtest)
corrects, wrongs = 0, 0
for i in range(len(Xtest)):
  print(f'No {i+1}\tTarget: {tags[int(ytest[i, 0])]}\t\tPrediction: {tags[int(outputs[i])]}')
  if abs(ytest[i, 0] - outputs[i]) <= .5:
    corrects += 1
  else:
    wrongs += 1
print('Accuracy: ', corrects / (corrects + wrongs))